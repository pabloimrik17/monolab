{
    "$schema": "./node_modules/nx/schemas/nx-schema.json",
    "defaultBase": "main",
    "namedInputs": {
        "default": ["{projectRoot}/**/*", "sharedGlobals"],
        "production": ["default"],
        "sharedGlobals": ["{workspaceRoot}/.github/workflows/ci.yml"]
    },
    "nxCloudId": "67f985a4bdd1693cbb6398fa",
    "parallel": 10,
    "targetDefaults": {
        "build": {
            "cache": true,
            "dependsOn": ["^build"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "default"
            ],
            "outputs": [
                "{projectRoot}/dist",
                "{projectRoot}/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/tsconfig.tsbuildinfo"
            ]
        },
        "build:check-exports": {
            "dependsOn": ["^build", "build", "^build:check-exports"]
        },
        "dev": {
            "continuous": true,
            "dependsOn": ["^build", "^dev"]
        },
        "lint:eslint": {
            "cache": true,
            "dependsOn": ["^build", "^lint:eslint"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "default",
                "{workspaceRoot}/eslint.config.ts"
            ],
            "outputs": [
                "{workspaceRoot}/.eslintcache",
                "{projectRoot}/.eslintcache"
            ]
        },
        "lint:knip": {
            "cache": true,
            "dependsOn": ["^lint:knip"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "default",
                "{workspaceRoot}/knip.config.ts"
            ]
        },
        "lint:markdownlint": {
            "cache": true,
            "dependsOn": ["^lint:markdownlint"],
            "inputs": [
                "default",
                "{workspaceRoot}/.markdownlint*",
                "{projectRoot}/.markdownlint*"
            ]
        },
        "lint:prettier": {
            "cache": true,
            "dependsOn": ["^lint:eslint", "^lint:prettier"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "default",
                "{projectRoot}/.prettierignore",
                "{workspaceRoot}/.prettierrc",
                "{workspaceRoot}/.prettierignore"
            ]
        },
        "lint:publint": {
            "cache": true,
            "dependsOn": ["^build", "build", "^lint:publint"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "{projectRoot}/package.json",
                "{projectRoot}/dist"
            ]
        },
        "lint:stylelint": {
            "cache": true,
            "dependsOn": ["^lint:stylelint"],
            "inputs": [
                "default",
                "{workspaceRoot}/.stylelintrc*",
                "{projectRoot}/.stylelintrc*"
            ]
        },
        "test": {
            "cache": true,
            "dependsOn": ["^build", "^test"],
            "inputs": [
                {
                    "runtime": "node --version"
                },
                "default",
                "{workspaceRoot}/vitest.config.ts",
                "{projectRoot}/vitest.config.ts"
            ],
            "outputs": [
                "{workspaceRoot}/coverage",
                "{workspaceRoot}/html",
                "{projectRoot}/coverage",
                "{projectRoot}/html"
            ]
        },
        "test:watch": {
            "cache": true,
            "continuous": true,
            "dependsOn": ["^build", "^test:watch"],
            "inputs": [
                "default",
                "{workspaceRoot}/vitest.config.ts",
                "{projectRoot}/vitest.config.ts"
            ],
            "outputs": [
                "{workspaceRoot}/coverage",
                "{workspaceRoot}/html",
                "{projectRoot}/coverage",
                "{projectRoot}/html"
            ]
        }
    },
    "sync": {
        "applyChanges": true
    },
    "plugins": [
        {
            "plugin": "@nx/js/typescript",
            "options": {
                "typecheck": {
                    "targetName": "typecheck"
                },
                "build": {
                    "targetName": "build",
                    "configName": "tsconfig.lib.json",
                    "buildDepsName": "build-deps",
                    "watchDepsName": "watch-deps"
                }
            }
        }
    ]
}
