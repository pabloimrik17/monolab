name: CI

on:
    push:
        branches:
            - main
            - pre
            - develop
    pull_request: {}

# Needed for nx-set-shas when run on the main branch
permissions:
    actions: read
    contents: read

jobs:
    main:
        runs-on: ubuntu-latest
        env:
            NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  filter: tree:0
                  fetch-depth: 0

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10.8.0

            # Cache global ~./pnpm
            - name: Setup Nodejs
              uses: actions/setup-node@v4
              with:
                  node-version: 22.14.0
                  cache: "pnpm"
                  cache-dependency-path: |
                      pnpm-lock.yaml
                      pnpm-workspace.yaml #monorepo support

            - name: Restore cached npm dependencies
              id: cache-dependencies-restore
              uses: actions/cache/restore@v4
              with:
                  path: |
                      node_modules
                      apps/*/node_modules #monorepo support
                      packages/*/node_modules #monorepo support
                      ~/.cache/Cypress # needed for the Cypress binary
                  key: npm-dependencies-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml', 'pnpm-workspace.yaml', 'apps/*/package.json', 'packages/*/package.json') }}
                  restore-keys: |
                      npm-dependencies-${{ runner.os }}-

            # This enables task distribution via Nx Cloud
            # Run this command as early as possible, before dependencies are installed
            # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
            - name: Start Nx Cloud CI Run
              run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Cache npm dependencies
              id: cache-dependencies-save
              uses: actions/cache/save@v4
              if: steps.cache-dependencies-restore.outputs.cache-hit != 'true'
              with:
                  path: |
                      node_modules
                      apps/*/node_modules  
                      packages/*/node_modules
                      ~/.cache/Cypress # needed for the Cypress binary
                  key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

            - uses: nrwl/nx-set-shas@v4

            - name: 🔍 Check monorepo integrity
              run: nx sync:check

            - name: 🔍 Check exports from packages
              run: nx run-many -t build:check-exports

            - name: 🔍 Check for format and lint configs are valid
              run: nx run-many -t lint:eslint:config-check lint:stylelint:config-check:scss

            - name: 🔍 Execute lint checks for affected files (Affected)
              if: ${{ github.event_name == 'pull_request' }}
              run: nx affected -t lint:knip lint:eslint lint:stylelint lint:markdownlint lint:prettier

            # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
            # - run: nx-cloud record -- echo Hello World

            - name: 🔍 Execute lint checks for affected files (Affected)
              if: ${{ github.event_name == 'pull_request' }}
              run: nx affected -t lint:knip lint:eslint lint:stylelint lint:markdownlint lint:prettier

            - name: 🔍 Execute lint checks for all files (All)
              if: ${{ github.event_name == 'push' }}
              run: nx run-many -t lint:publint lint:knip lint:eslint lint:stylelint lint:markdownlint lint:prettier

            - name: 🧪 Execute test checks for affected files (Affected)
              # We disable the coverage threshold for PRs because affected will only run on the files
              # that have changed and the coverage will be lower than the threshold
              if: ${{ github.event_name == 'pull_request' }}
              run: nx affected -t test -- --coverage.thresholds.0

            - name: 🧪 Execute test checks for all files (All)
              if: ${{ github.event_name == 'push' }}
              run: nx run-many -t test

            - name: 🏗 Execute build checks for affected files (Affected)
              if: ${{ github.event_name == 'pull_request' }}
              run: nx affected -t build

            - name: 🏗 Execute build checks for all files (All)
              if: ${{ github.event_name == 'push' }}
              run: nx run-many -t build
